knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
library(tibble)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
library(tibble)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
test_data <- tibble(
x = seq(-6, 4, 0.1),
dens = dlogis(x, location = -1, scale = 1),
cumulative = plogis(x, location = -1, scale = 1)
)
p1 <- ggplot(test_data, aes( x = x, y = dens)) +
geom_line() +
geom_area(data = filter(test_data, x < 1), alpha = .3)
p2 <- ggplot(test_data, aes(x = x, y = cumulative)) +
geom_line() +
geom_hline(yintercept = plogis(1, location = -1, scale = 1), linetype = "longdash") +
geom_vline(xintercept = 1, linetype = "longdash")
grid.arrange(p1, p2, ncol = 2)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
library(tibble)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
test_data <- tibble(
x = seq(-6, 4, 0.1),
dens = dlogis(x, location = -1, scale = 1),
cumulative = plogis(x, location = -1, scale = 1)
)
p1 <- ggplot(test_data, aes( x = x, y = dens)) +
geom_line() +
geom_area(data = filter(test_data, x < 1), alpha = .3)
p2 <- ggplot(test_data, aes(x = x, y = cumulative)) +
geom_line() +
geom_hline(yintercept = plogis(1, location = -1, scale = 1), linetype = "longdash") +
geom_vline(xintercept = 1, linetype = "longdash")
grid.arrange(p1, p2, ncol = 2)
bliss
# fit a bunch of models, with the 4 different link fns that are here
mlogit <- glm(cbind(dead,alive) ~ conc, family=binomial, data=bliss)
mprobit <- glm(cbind(dead,alive) ~ conc, family=binomial(link=probit), data=bliss)
mcloglog <- glm(cbind(dead,alive) ~ conc, family=binomial(link=cloglog), data=bliss)
mcauchit <- glm(cbind(dead,alive) ~ conc, family=binomial(link=cauchit), data=bliss)
new_data <- data.frame(conc =seq(0, 8, length.out = 100))
purrr::map_dfc(list(logit = mlogit,
probit = mprobit,
cloglog = mcloglog,
cauchit = mcauchit),
predict, newdata  = new_data, type = "response") %>%
mutate(conc = new_data$conc) %>%
tidyr::pivot_longer(logit:cauchit, names_to ="model") %>%
ggplot(aes(x = conc, y = value, color = model)) +
geom_line() +
geom_vline(xintercept = c(0, 4), linetype = "dotted")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
library(tibble)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
test_data <- tibble(
x = seq(-6, 4, 0.1),
dens = dlogis(x, location = -1, scale = 1),
cumulative = plogis(x, location = -1, scale = 1)
)
p1 <- ggplot(test_data, aes( x = x, y = dens)) +
geom_line() +
geom_area(data = filter(test_data, x < 1), alpha = .3)
p2 <- ggplot(test_data, aes(x = x, y = cumulative)) +
geom_line() +
geom_hline(yintercept = plogis(1, location = -1, scale = 1), linetype = "longdash") +
geom_vline(xintercept = 1, linetype = "longdash")
grid.arrange(p1, p2, ncol = 2)
bliss
# fit a bunch of models, with the 4 different link fns that are here
mlogit <- glm(cbind(dead,alive) ~ conc, family=binomial, data=bliss)
mprobit <- glm(cbind(dead,alive) ~ conc, family=binomial(link=probit), data=bliss)
mcloglog <- glm(cbind(dead,alive) ~ conc, family=binomial(link=cloglog), data=bliss)
mcauchit <- glm(cbind(dead,alive) ~ conc, family=binomial(link=cauchit), data=bliss)
new_data <- data.frame(conc =seq(0, 8, length.out = 100))
purrr::map_dfc(list(logit = mlogit,
probit = mprobit,
cloglog = mcloglog,
cauchit = mcauchit),
predict, newdata  = new_data, type = "response") %>%
mutate(conc = new_data$conc) %>%
tidyr::pivot_longer(logit:cauchit, names_to ="model") %>%
ggplot(aes(x = conc, y = value, color = model)) +
geom_line() +
geom_vline(xintercept = c(0, 4), linetype = "dotted")
xtabs(disease/(disease + nondisease) ~ sex + food, babyfood)
babyfood[c(1,3),]
babyfood[c(1,3),]
babyfood[c(1,3),]
# risk of bottle feeding
# this is on the log scale
log(77/381) - log(47/447)
log((77/381)/(47/447))
babyfood[c(1,3),]
log(77/47) - log(381/447)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
library(tibble)
library(purrr)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
mu <- c(0.5, 2 , 5)
map_dfr(mu, function(mu) {
tibble(
y = 1:15,
p = dpois(y, lambda = mu),
mu = mu)
}) %>%
ggplot(aes(x = y, y = p)) +
geom_bar(stat = "identity") +
facet_wrap(~mu)
data(gala, package = "faraway")
d <- select(gala, -Endemics)
summary(d)
modl <- lm(Species ~ . , d)
plot(modl, 1)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
library(tibble)
library(purrr)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
mu <- c(0.5, 2 , 5)
map_dfr(mu, function(mu) {
tibble(
y = 1:15,
p = dpois(y, lambda = mu),
mu = mu)
}) %>%
ggplot(aes(x = y, y = p)) +
geom_bar(stat = "identity") +
facet_wrap(~mu)
data(gala, package = "faraway")
d <- select(gala, -Endemics)
summary(d)
modl <- lm(Species ~ . , d)
plot(modl, 1)
modt <- lm(sqrt(Species) ~ . , d)
plot(modt, 1)
summary(modt)
modp <- glm(Species ~ ., family=poisson, d)
summary(modp)
broom::glance(modp)
halfnorm(residuals(modp))
tibble(
hat_u = log(fitted(modp)),
est_var = log((gala$Species-fitted(modp))^2)
) %>%
ggplot(aes(x = hat_u, y = est_var)) +
geom_point() +
geom_abline(slope = 1, intercept = 0) +
coord_fixed(xlim = c(0, 10))
dp <- sum(residuals(modp,type="pearson")^2)/modp$df.res
summary(modp, dispersion = dp)
data(dicentric, package="faraway")
round(xtabs(ca/cells ~ doseamt+doserate, dicentric),2)
ggplot(dicentric, aes(x = doserate, y = ca/cells, linetype = as.factor(doseamt))) +
geom_line()
lmod <- lm(ca/cells ~ log(doserate)*factor(doseamt), dicentric)
summary(lmod)$adj
plot(lmod, 1)
dicentric$dosef <- factor(dicentric$doseamt)
# interactoint term with the *
pmod <- glm(ca ~ offset(log(cells)) +log(doserate)*dosef, family=poisson,data = dicentric)
summary(pmod)
# Here I just have the addition term. There's no interaction here
pmod_no_inter <- glm(ca ~ offset(log(cells)) +log(doserate) + dosef, family=poisson,data = dicentric)
dicentric_fit <- dicentric
# Added fitted value for both the interaction model and the non-interaction model and we're going to look at how those two vary.
dicentric_fit$fitted <- fitted.values(pmod)
dicentric_fit$fitted_no_inter <- fitted.values(pmod_no_inter)
p <- ggplot(dicentric, aes(x = doserate, y = ca/cells, linetype = as.factor(doseamt))) +
geom_line() +
geom_line(data = dicentric_fit, aes(y = fitted/cells, color = "Interaction")) +
geom_line(data = dicentric_fit, aes(y = fitted_no_inter/cells, color = "No Interaction")) +
scale_x_log10() +
scale_y_log10()
# Notice that I scale both the x and y to log in ggplot. That'll help us just see this so we donâ€™t have to deal with the curves of everything.
p
# t
data(solder, package="faraway")
modp <- glm(skips ~ . , family=poisson, data=solder)
c(deviance(modp), df.residual(modp))
library(MASS)
modn <- glm(skips ~ .,negative.binomial(1),solder)
summary(modn)
modn <- glm.nb(skips ~ .,solder)
summary(modn)
library(pscl)
modp <- glm(art ~ ., data=bioChemists, family=poisson)
summary(modp)
install.packages("VGAM")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(MASS)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
library(tibble)
library(purrr)
library(broom)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(fig.align = 'center')
library(faraway)
library(MASS)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(printr)
library(tibble)
library(purrr)
library(broom)
theme_set(theme_minimal()) # automatically set a simpler ggplot2 theme for all graphics
data(nes96, package="faraway")
party <- nes96$PID
levels(party) <- c("Democrat","Democrat","Independent","Independent", "Independent","Republican","Republican")
inca <- c(1.5,4,6,8,9.5,10.5,11.5,12.5,13.5,14.5,16,18.5,21,23.5, 27.5,32.5,37.5,42.5,47.5,55,67.5,82.5,97.5,115)
income <- inca[unclass(nes96$income)]
rnes96 <- data.frame(party, income, education=nes96$educ, age=nes96$age)
summary(rnes96)
rnes96 %>%
group_by(education, party) %>%
summarise(n = n(), .groups = "drop_last") %>%
mutate(prop = n/sum(n)) %>%
ggplot(aes(x = education, y = prop, linetype = party)) +
geom_line(aes(group = party))
rnes96 %>%
group_by(income, party) %>%
summarise(n = n(), .groups = "drop_last") %>%
mutate(prop = n/sum(n)) %>%
ggplot(aes(x = income, y = prop, color = party, weight = n)) +
geom_point(alpha = .3) +
geom_smooth(method = "loess", se = F, formula = y ~ x)
# these models require a dfifferent package, nnet which stands for neural net. only reason is bc th eopimizieer it uses comes from there
# the fn here is the multinom fn
library(nnet)
mmod <- multinom(party ~ age + education + income, rnes96)
mmodi <- step(mmod, trace = 0) # we can also use deviance etc.
mmodi <- step(mmod, trace = 1) # we can also use deviance etc.
rnes96_ordinal <- rnes96
rnes96_not_ordinal$education
rnes96_not_ordinal <- rnes96
rnes96_not_ordinal <- rnes96
rnes96_not_ordinal$education
rnes96_not_ordinal$education <- factor(rnes96_not_ordinal$education, ordered = FALSE)
rnes96_not_ordinal %>% glimpse
rnes96 %>% glimpse
# let's fit two models
mmod_not_ord <- multinom(party ~ age + education + income, rnes96_not_ordinal)
mmod_not_ord$edf
mmod$edf
AIC(mmod_not_ord)
AIC(mmod)
summary(mmod_not_ord)
lm(income ~ education, data = rnes96_not_ordinal) %>% summary()
lm(income ~ education, data = rnes96) %>% summary() # you see that it's not the same. its doing soemthing very different in the background.
