lmod2 <- glm(test ~ pregnant + glucose + diastolic + bmi + diabetes + age, family = binomial(link = "logit"), data = pima3)
# Summary of lmod2
summary(lmod2)
# Coefficients of lmod2
lmod %>% broom::tidy()
# Number of obv in lmod2
nobs(lmod2, use.fallback=F)
# Any column w/ NA will return 0, complete cases will return 1
# using pima2 bc it is the dataset b4 we took out all NA's
pima2$check <-  as.integer(complete.cases(pima2))
if(pima2 > 0) {
print("TRUE")
} else {
print("FALSE")
}
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
View(pima)
# Any column w/ NA will return 0, complete cases will return 1
# using pima2 bc it is the dataset b4 we took out all NA's
pima2$check <-  as.integer(complete.cases(pima2))
if(pima2 > 0) {
print("TRUE")
} else {
print("FALSE")
}
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
knitr::opts_chunk$set(echo = TRUE)
# Install packages
library(dplyr)
library(faraway)
library(tidyverse)
# Get dataset
data("pima")
?pima
summary(pima)
# Change test 0,1 values into negative and positive
pima$test_factor <- ifelse(pima$test == 0, "negative", "positive")
# Interleaved histogram
pima %>%
ggplot(aes(x = insulin, color = test_factor)) +
geom_histogram(fill = "white") + ggtitle("# of women test positive/negative in relation to C/INC insulin values")
# Change insulin 0 values into NA's
pima2 <- pima %>%
mutate(insulin = na_if(insulin, "0"))
summary(pima2)
# Interleaved histogram w/o insulin missing values (NA)
pima2 %>%
ggplot(aes(x = insulin, color = test_factor)) +
geom_histogram(fill = "white") + ggtitle("# of women test positive/negative in relation to complete(C) insulin values")
# Interleaved histogram w/o insulin missing values (NA)
pima2 %>%
ggplot(aes(x = insulin, color = test_factor)) +
geom_histogram(fill = "white") + ggtitle("# of women test positive/negative in relation to complete(C) insulin values")
# Change all O predictor values into NA's
pima2$pregnant[pima2$pregnant==0] <-NA
pima2$glucose[pima2$glucose==0] <- NA
pima2$diastolic[pima2$diastolic==0] <- NA
pima2$triceps[pima2$triceps==0] <- NA
pima2$insulin[pima2$insulin==0] <- NA
pima2$bmi[pima2$bmi==0] <- NA
pima2$diabetes[pima2$diabetes==0] <- NA
pima2$age[pima2$age==0] <- NA
# Take out all NA's from dataset
pima3 <- na.omit(pima2)
# Generalized linear model (GLM) w/ link 'logit' bc data is skewed
lmod <- glm(test ~ pregnant + glucose + diastolic + triceps + insulin + bmi + diabetes + age, family = binomial(link = "logit"), data = pima3)
# Summary of lmod
summary(lmod)
# Coefficients of lmod
lmod %>% broom::tidy()
# Number of obv in lmod
nobs(lmod, use.fallback=F)
# GLM w/o insulin and triceps
lmod2 <- glm(test ~ pregnant + glucose + diastolic + bmi + diabetes + age, family = binomial(link = "logit"), data = pima3)
# Summary of lmod2
summary(lmod2)
# Coefficients of lmod2
lmod %>% broom::tidy()
# Number of obv in lmod2
nobs(lmod2, use.fallback=F)
# Anova test
anova(lmod, lmod2, test = "Chi")
# AIC
AIC(lmod)
AIC(lmod2)
# AIC
AIC(lmod)
AIC(lmod2)
# Any column w/ NA will return 0, complete cases will return 1
# using pima2 bc it is the dataset b4 we took out all NA's
pima2$check <-  as.integer(complete.cases(pima2))
if(pima2 > 0) {
print("TRUE")
} else {
print("FALSE")
}
# Ckeck 0/1 will return FALSE/TRUE
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
# Any column w/ NA will return 0, complete cases will return 1
# using pima2 bc it is the dataset b4 we took out all NA's
pima2$check <-  as.integer(complete.cases(pima2))
if(pima2 > 0) {
print("TRUE")
} else {
print("FALSE")
}
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
pima2$check <-  as.integer(complete.cases(pima2))
if(pima2 > 0) {
print("TRUE")
} else {
print("FALSE")
}
print("TRUE")
if(pima2 > 0) {
pima2$check <-  as.integer(complete.cases(pima2))
if(pima2 > 0) {
print("TRUE")
# Change all O predictor values into NA's
pima2$pregnant[pima2$pregnant==0] <-NA
pima2$glucose[pima2$glucose==0] <- NA
pima2$diastolic[pima2$diastolic==0] <- NA
pima2$triceps[pima2$triceps==0] <- NA
pima2$insulin[pima2$insulin==0] <- NA
pima2$bmi[pima2$bmi==0] <- NA
pima2$diabetes[pima2$diabetes==0] <- NA
pima2$age[pima2$age==0] <- NA
# Take out all NA's from dataset
pima3 <- na.omit(pima2)
# Generalized linear model (GLM) w/ link 'logit' bc data is skewed
lmod <- glm(test ~ pregnant + glucose + diastolic + triceps + insulin + bmi + diabetes + age, family = binomial(link = "logit"), data = pima3)
# Summary of lmod
summary(lmod)
# Coefficients of lmod
lmod %>% broom::tidy()
# Number of obv in lmod
nobs(lmod, use.fallback=F)
# Change insulin 0 values into NA's
pima2 <- pima %>%
mutate(insulin = na_if(insulin, "0"))
summary(pima2)
# Interleaved histogram w/o insulin missing values (NA)
pima2 %>%
ggplot(aes(x = insulin, color = test_factor)) +
geom_histogram(fill = "white") + ggtitle("# of women test positive/negative in relation to complete(C) insulin values")
# Change all O predictor values into NA's
pima2$pregnant[pima2$pregnant==0] <-NA
pima2$glucose[pima2$glucose==0] <- NA
pima2$diastolic[pima2$diastolic==0] <- NA
pima2$triceps[pima2$triceps==0] <- NA
pima2$bmi[pima2$bmi==0] <- NA
pima2$diabetes[pima2$diabetes==0] <- NA
pima2$age[pima2$age==0] <- NA
# Take out all NA's from dataset
pima3 <- na.omit(pima2)
# Generalized linear model (GLM) w/ link 'logit' bc data is skewed
lmod <- glm(test ~ pregnant + glucose + diastolic + triceps + insulin + bmi + diabetes + age, family = binomial(link = "logit"), data = pima3)
# Summary of lmod
summary(lmod)
# Coefficients of lmod
lmod %>% broom::tidy()
# Number of obv in lmod
nobs(lmod, use.fallback=F)
# Change all O predictor values into NA's
# note: didn't include insulin bc already done^
pima2$pregnant[pima2$pregnant==0] <-NA
pima2$glucose[pima2$glucose==0] <- NA
pima2$diastolic[pima2$diastolic==0] <- NA
pima2$triceps[pima2$triceps==0] <- NA
pima2$bmi[pima2$bmi==0] <- NA
pima2$diabetes[pima2$diabetes==0] <- NA
pima2$age[pima2$age==0] <- NA
# Take out all NA's from dataset
pima3 <- na.omit(pima2)
# Generalized linear model (GLM) w/ link 'logit' bc data is skewed
lmod <- glm(test ~ pregnant + glucose + diastolic + triceps + insulin + bmi + diabetes + age, family = binomial(link = "logit"), data = pima3)
# Summary of lmod
summary(lmod)
# Coefficients of lmod
lmod %>% broom::tidy()
# Number of obv in lmod
nobs(lmod, use.fallback=F)
# GLM w/o insulin and triceps
lmod2 <- glm(test ~ pregnant + glucose + diastolic + bmi + diabetes + age, family = binomial(link = "logit"), data = pima3)
# Summary of lmod2
summary(lmod2)
# Coefficients of lmod2
lmod %>% broom::tidy()
# Number of obv in lmod2
nobs(lmod2, use.fallback=F)
# Anova test
anova(lmod, lmod2, test = "Chi")
# AIC
AIC(lmod)
AIC(lmod2)
# Any column w/ NA will return 0, complete cases will return 1
# using pima2 bc it is the dataset b4 we took out all NA's
pima2$check <-  as.integer(complete.cases(pima2))
if(pima2 > 0)
print("TRUE")
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
# Any column w/ NA will return 0, complete cases will return 1
# using pima2 bc it is the dataset b4 we took out all NA's
pima2$check <-  as.integer(complete.cases(pima2))
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
# Any column w/ NA will return 0, complete cases will return 1
# Pima2 is the dataset b4 omitted NA's
pima2$check <-  as.integer(complete.cases(pima2))
# Ckeck 0/1 will return FALSE/TRUE
pima2$complete <- factor(pima2$check)
levels(pima2$complete) <- c("FALSE", "TRUE"); levels(pima2$complete)
# GLM w/ test as response; check as predictor
lmod_check <- glm(test ~ check, family = binomial(link = "logit"), data = pima2)
# Summary of lmod_check
summary(lmod_check)
# Number of obs in lmod_check
nobs(lmod_check, use.fallback=F)
# Coefficients of lmod_check
lmod_check %>% broom::tidy()
# Refit selected model (lmod2)
lmod2_step <- step(lmod2, trace=1)
quantile(pima3$bmi, c(.25, .75))
# Quartile values
quantile(pima3$bmi)
# Coefficients of lmod3
coef(lmod3)
# GLM w/ test as response; glucose, bmi, diabetes, & age as predictor
lmod3 <- glm(test ~ glucose + bmi + diabetes + age, family = binomial(link = "logit"), data = pima3)
# Summary of lmod3
summary(lmod3)
# Number of obs in lmod3
nobs(lmod3, use.fallback=F)
# Coefficients of lmod3
lmod %>% broom::tidy()
# Coefficients of lmod3
coef(lmod3)
# Quartile values
quantile(pima3$bmi, c(.25, .75))
diff <- 36.25 - 27.80
# Quartile values
quantile(pima3$bmi, c(.25, .75))
diff <- 36.25 - 27.80; diff
knitr::opts_chunk$set(echo = TRUE)
x1 <- 1
x2<- 1
x3 <- 1
x4 <- 1
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4
x2_ <- x2 + 8.45
x2_; <- x2 + 8.45
x2_a <- x2 + 8.45
x2_d <- x2 + 8.45
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4
x2_d <- x2 + 8.45
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4
odd <- e^(-10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4)
odd <- exp(-10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4)
odd <- exp(-10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4); odd
odd <- exp(logodd)
odd <- exp(-10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4); odd
odd <- exp(logodd); odd
odd_d <- exp(logodd_d); odd_d
# Odds ratio
odds_ratio <- odd_d/odd; odds_ratio
# Logodds
x1 <- 1
x2<- 1
x3 <- 1
x4 <- 1
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4
x2_d <- x2 + 8.45
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4
odd_e <- exp(-10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4)
odd_e_d <- exp(10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4)
odd_fraction <- (exp(0.08916452 * x2)exp(0.08916452 * 8.45))/(exp(0.08916452 * x2))
odd_fraction <- (exp(0.08916452 * x2) * exp(0.08916452 * 8.45))/(exp(0.08916452 * x2))
odd_fraction <- (exp(0.08916452 * x2) * exp(0.08916452 * 8.45))/(exp(0.08916452 * x2)); odd_fraction
odd_e_beta <- exp(0.08916452 * 8.45); odd_e_beta
# Reg eta
eta <- -10.81046566 + 0.03639389 + 0.08916452 + 1.05588018 + 0.05940477
# 3rd quartile eta; add all lmod3 coef, multiple quart 75% to bmi coef
eta_d <- -10.81046566 + 0.03639389 + 0.08916452 * 8.45 + 1.05588018 + 0.05940477
# Odds ratio for 1st & 3rd quartile eta's
odds_ratio_reg <- ilogit(eta); odds_ratio_reg
odds_ratio_d <- ilogit(etd_d);
# Odds ratio for 1st & 3rd quartile eta's
odds_ratio_reg <- ilogit(eta); odds_ratio_reg
odds_ratio_d <- ilogit(eta_d); odds_ratio_d
# Odds ratio formula/scale
ilogit <- function(odds){
exp(eta_d)/(exp(eta) + 1)
} ; iloogit
# Odds ratio formula/scale
ilogit <- function(odds){
exp(eta_d)/(exp(eta) + 1)
} ; ilogit
# Odds ratio formula/scale
ilogit <-
exp(eta_d)/(exp(eta) + 1) ; ilogit
# Odds ratio formula/scale
ilogit <-
exp(eta_d)/(exp(eta)) ; ilogit
# Coefficients of lmod3
coef(lmod3)
# Quartile values
quantile(pima3$bmi, c(.25, .75))
diff <- 36.25 - 27.80; diff
# Logodds
x1 <- 1
x2<- 1
x3 <- 1
x4 <- 1
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4
x2_d <- x2 + 8.45
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4
x2_d <- x2 + diff; x2_d
# Logodds
x1 <- 1
x2<- 1
x3 <- 1
x4 <- 1
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4
x2_d <- x2 + diff; x2_d
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4
# Odds
odd <- exp(logodd); odd
odd_d <- exp(logodd_d); odd_d
# Odds ratio
odds_ratio <- odd_d/odd; odds_ratio
odd_e <- exp(-10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4)
odd_e_d <- exp(10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4)
odd_fraction <- (exp(0.08916452 * x2) * exp(0.08916452 * diff))/(exp(0.08916452 * x2)); odd_fraction
odd_e_beta <- exp(0.08916452 * diff); odd_e_beta
# Confidence Interval for the Standard Error
summary(lmod3)
mu_low <- confint(lmod)[3] - 1.96*summary(lmod3)$confint[3,3]; mu_low
# Confidence Interval for the Standard Error
summary(lmod3)
confint(lmod3)
# Confidence Interval for the Standard Error
summary(lmod3)
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45)
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
CI_lower <- 0.089165 - (1.96 * 0.024301; CI_lower
CI_lower <- 0.089165 - (1.96 * 0.024301); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301); CI_upper
CI_lower <- 0.089165 - (1.96 * 0.024301); CI_lower
CI_reg_lower <- 0.089165 - (1.96 * 0.024301); CI_reg_lower
CI_reg_upper <- 0.089165 + (1.96 * 0.024301); CI_reg_upper
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
CI_reg_lower <- 0.089165 - 1.96 * 0.024301; CI_reg_lower
CI_reg_lower <- 0.089165 - 1.96 * 0.024301; CI_reg_lower
CI_reg_upper <- 0.089165 + (1.96 * 0.024301); CI_reg_upper
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
CI_reg_upper <- 0.089165 + 1.96 * 0.024301; CI_reg_upper
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
# Confidence Interval for the Standard Error
summary(lmod3)
mu_low <- confint(lmod)[3] - 1.96*summary(lmod3)$confint[3,3]; mu_low
# Confidence Interval for the Standard Error
summary(lmod3)
CI_reg_lower <- 0.089165 - 1.96 * 0.024301; CI_reg_lower
CI_reg_upper <- 0.089165 + 1.96 * 0.024301; CI_reg_upper
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
log_odds_ratio <- log(odds_ratio)
log_odds_ratio <- log(odds_ratio); log_odds_ratio
CI_reg_lower <- 0.089165 - 1.96 * 0.024301; CI_reg_lower
CI_reg_upper <- 0.089165 + 1.96 * 0.024301; CI_reg_upper
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
exp_CI_lower <- exp(CI_lower); exp_CI_lower
exp_CI_upper <- exp(CI_upper); exp_CI_upper
# Odds ratio
odds_ratio <- odd_d/odd; odds_ratio
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
log_odds_ratio <- log(odds_ratio); log_odds_ratio
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
exp_CI_lower <- exp(CI_lower); exp_CI_lower
exp_CI_upper <- exp(CI_upper); exp_CI_upper
# Odds ratio
odds_ratio <- odd_d/odd; odds_ratio
log_odds_ratio <- log(odds_ratio); log_odds_ratio
exp_CI_lower <- exp(0.7534402 - (1.96 * 0.024301 * 8.45)); exp_CI_lower
exp_CI_lower <- exp(0.7534402 - (1.96 * 0.024301 * 8.45)); exp_CI_lower
exp_CI_upper <- exp(0.7534402 + (1.96 * 0.024301 * 8.45)); exp_CI_upper
CI_reg_lower <- 0.089165 - 1.96 * 0.024301; CI_reg_lower
CI_reg_upper <- 0.089165 + 1.96 * 0.024301; CI_reg_upper
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
exp_CI_lower <- exp(CI_lower)
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
exp_CI_lower <- exp(CI_lower); exp_CI_lower
exp_CI_lower <- exp(CI_lower); exp_CI_lower
exp_CI_lower <- exp(0.7534402 - (1.96 * 0.024301 * 8.45)); exp_CI_lower
CI_lower <- 0.089165 - (1.96 * 0.024301 * 8.45); CI_lower
CI_upper <- 0.089165 + (1.96 * 0.024301 * 8.45); CI_upper
exp_CI_upper <- exp(CI_lower); exp_CI_upper
exp_CI_upper <- exp(CI_upper); exp_CI_upper
exp_CI_upper <- exp(0.7534402 + (1.96 * 0.024301 * 8.45)); exp_CI_upper
exp_CI_upper <- exp(CI_upper); exp_CI_upper
log_odds_ratio <- log(odds_ratio); log_odds_ratio
odds_ratio <- odd_d/odd; odds_ratio
log_odds_ratio <- log(odds_ratio); log_odds_ratio
exp_CI_lower <- exp(0.7534402 - (1.96 * 0.024301 * 8.45)); exp_CI_lower
exp_CI_upper <- exp(0.7534402 + (1.96 * 0.024301 * 8.45)); exp_CI_upper
# Confidence Interval for the Standard Error (SE)
# use the log(odds ratio) as estimate, and SE of lmod
summary(lmod3)
log_odds_ratio <- log(odds_ratio); log_odds_ratio
exp_CI_lower <- exp(0.7534402 - (1.96 * 0.024301 * 8.45)); exp_CI_lower
exp_CI_upper <- exp(0.7534402 + (1.96 * 0.024301 * 8.45)); exp_CI_upper
# Confidence Interval for the Standard Error (SE)
# use the log(odds ratio) as estimate, and SE of lmod
lmod3 %>% broom::tidy()(lmod3)
lmod3 %>% broom::tidy()(lmod3)
# Coefficients of lmod3
lmod3 %>% broom::tidy()
lmod3 %>% broom::tidy()
lmod3 %>% broom::tidy()
log_odds_ratio <- log(odds_ratio); log_odds_ratio
exp_CI_lower <- exp(0.7534402 - (1.96 * 0.024301 * 8.45)); exp_CI_lower
exp_CI_upper <- exp(0.7534402 + (1.96 * 0.024301 * 8.45)); exp_CI_upper
# Odds ratio
odds_ratio <- odd_d/odd; odds_ratio
log_odds_ratio <- log(odds_ratio); log_odds_ratio
# Coefficients of lmod3
coef(lmod3)
# Quartile values
quantile(pima3$bmi, c(.25, .75))
diff <- 36.25 - 27.80; diff
# Logodds
x1 <- 1
x2<- 1
x3 <- 1
x4 <- 1
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4
x2_d <- x2 + diff
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4; logodd
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4; logodd_d
# Logodds
x1 <- 1
x2<- 1
x3 <- 1
x4 <- 1
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4; logodd
x2_d <- x2 + diff
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4; logodd_d
# Odds
odd <- exp(logodd); odd
odd_d <- exp(logodd_d); odd_d
# Odds ratio
odds_ratio <- odd_d/odd; odds_ratio
# Logodds
x1 <- 1
x2<- 1
x3 <- 1
x4 <- 1
logodd = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4; logodd
x2_d <- x2 + diff
logodd_d = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4; logodd_d
# Odds
odd1 <- exp(logodd); odd
odd2 <- exp(logodd_d); odd_d
# Odds ratio
odds_ratio <- odd2/odd1; odds_ratio
# Logodds
x1 <- 1
x2<- 1
x3 <- 1
x4 <- 1
logodd_1 = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2 + 1.05588018 * x3 + 0.05940477 * x4; logodd_1
x2_d <- x2 + diff
logodd_2 = -10.81046566 + 0.03639389 * x1 + 0.08916452 * x2_d + 1.05588018 * x3 + 0.05940477 * x4; logodd_2
# Odds
odd1 <- exp(logodd_1); odd1
odd2 <- exp(logodd_2); odd2
# Odds ratio
odds_ratio <- odd2/odd1; odds_ratio
